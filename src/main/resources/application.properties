# Server Configuration
server.port=8080

# Database Configuration (PostgreSQL)
spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT:5432}/${DB_NAME:bank_management_db}
spring.datasource.username=${DB_USERNAME:your_db_user}
spring.datasource.password=${DB_PASSWORD:your_db_password}
spring.datasource.driver-class-name=org.postgresql.Driver

# Connection Pool Settings (recommended for Cloud SQL)
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# JPA/Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
# Use PostgreSQL dialect
spring.jpa.hibernate.ddl-auto=update 
# Or 'validate' in production after initial schema setup
spring.jpa.show-sql=false
# Set to false in production for less noise
spring.jpa.properties.hibernate.format_sql=false
# Set to false in production

# Location of data.sql for initial data seeding
# Spring Boot automatically picks up data.sql in the classpath root (src/main/resources)
spring.sql.init.mode=always
# Ensure data.sql is always run (default for embedded)
# Defer data.sql execution until after JPA schema setup
spring.jpa.defer-datasource-initialization=true

# Thymeleaf Configuration
spring.thymeleaf.cache=false
# Disable caching during development for easier template changes
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html

# Spring Security Debugging (Optional)
# logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.jdbc.datasource.init=DEBUG
logging.level.org.springframework.boot.sql.init=DEBUG
logging.level.org.springframework.jdbc=DEBUG

# DevTools (Optional - disables caching, enables live reload)
spring.devtools.livereload.enabled=true
spring.devtools.restart.enabled=true

#SQL debugging
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE